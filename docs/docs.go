// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/employees": {
            "get": {
                "description": "Выводит сотрудников, отфильтрованных по query string\n•Если параметров нет - возвращает всех сотрудников.\n•Можно вводить несколько параметров одного ключа (?id=1\u0026id=2)",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Вывод сотрудников",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?id=*",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?name=*",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?secondname=*",
                        "name": "secondname",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?job=*",
                        "name": "job",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?otdel=*",
                        "name": "otdel",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список сотрудников построчно",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "По данному запросу никого нет",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при выполнении запроса к БД  ИЛИ  БД отдало невалидный JSON",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Изменяет сотрудников, отфильтрованных по query string,меняя их данные на данные из JSON\n•Если параметров нет - изменяет **всех** сотрудников (опасная операция!)\n•Можно вводить несколько параметров одного ключа (?id=1\u0026id=2)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Изменение сотрудников",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?id=*",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?name=*",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?secondname=*",
                        "name": "secondname",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?job=*",
                        "name": "job",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?otdel=*",
                        "name": "otdel",
                        "in": "query"
                    },
                    {
                        "description": "Данные на которые надо поменять",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Employee"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Изменение выполнено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Ошибка при выполнении запроса",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавляет сотрудников в БД(все поля JSON должны быть заполенны)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Добавление сотрудников",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Массив сотрудников",
                        "name": "employees",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Employee"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешно добавлены сотрудники: ... ...",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный json",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при выполнении запроса к БД",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет сотрудников, отфильтрованных по query string\n•Если параметров нет - удаляет **всех** сотрудников (опасная операция!)\n•Можно вводить несколько параметров одного ключа (?id=1\u0026id=2)",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Удаление сотрудников",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?id=*",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?name=*",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?secondname=*",
                        "name": "secondname",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?job=*",
                        "name": "job",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр: ?otdel=*",
                        "name": "otdel",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Сотрудники удалены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Ошибка при выполнении запроса",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Дает токен+роль,роль админа выдается при вводе данных админа из .env файла",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Вход для получения JWT токена",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "JWT+роль",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка генерации токена",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AuthResponse": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.Employee": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "job": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "otdel": {
                    "type": "integer"
                },
                "secondname": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
